version: '3.8'

services:
  # 后端服务
  backend:
    build: ./backend
    container_name: big_model_app_backend
    restart: always
    volumes:
      - ./backend:/app
      - static_volume:/app/static
      - media_volume:/app/media
      - ./logs:/app/logs
    env_file:
      - ./backend/.env
    depends_on:
      - redis
    networks:
      - app_network
  
  # Celery Worker
  celery_worker:
    build: ./backend
    container_name: big_model_app_celery_worker
    restart: always
    command: celery -A big_model_app worker -l info
    volumes:
      - ./backend:/app
      - ./logs:/app/logs
    env_file:
      - ./backend/.env
    depends_on:
      - backend
      - redis
    networks:
      - app_network
  
  # Celery Beat
  celery_beat:
    build: ./backend
    container_name: big_model_app_celery_beat
    restart: always
    command: celery -A big_model_app beat -l info
    volumes:
      - ./backend:/app
      - ./logs:/app/logs
    env_file:
      - ./backend/.env
    depends_on:
      - backend
      - redis
    networks:
      - app_network
  
  # Redis
  redis:
    image: redis:latest
    container_name: big_model_app_redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    restart: always
    networks:
      - app_network
  
  # 前端服务
  frontend:
    build: ./frontend
    container_name: big_model_app_frontend
    restart: always
    volumes:
      - static_volume:/usr/share/nginx/static
      - media_volume:/usr/share/nginx/media
    depends_on:
      - backend
    ports:
      - "5588:80"
    networks:
      - app_network

# 数据卷
volumes:
  static_volume:
  media_volume:
  redis_data:

# 网络
networks:
  app_network:
    driver: bridge 